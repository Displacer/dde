#include "dde_server.h"
#include <cstring>

using std::string;

////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  ���:           Dde::Dde(string Serv)
//  ����������:    ����������� ������ (�������� ������ ��� ��� �������)
//  ����:          ������ � ������ �������
//  �����:         ���
//  ����������:    
////////////////////////////////////////////////////////////////////////////////////////////////////////////
Dde::Dde(string Serv):idInst(0), hszService(NULL)
{
	chService = Serv;
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  ���:           Dde::Dde()
//  ����������:    ����������� ��� ����������
//  ����:          ���
//  �����:         ���
//  ����������:    ����� ���������� �������� ������������� ������� ��� ������ ������� DdeInit
////////////////////////////////////////////////////////////////////////////////////////////////////////////
Dde::Dde():idInst(0), hszService(NULL)
{
	chService = "";
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  ���:           Dde::DdeInit(string Serv)
//  ����������:    ����� �������� ������ ��� ��� �������
//  ����:          ������ � ������ �������
//  �����:         ���
//  ����������:    ����������� � ������ � ������������� ��� ���������� ��� ������������� ������    
////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Dde::DdeInit(string Serv)
{
	chService = Serv;
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  ���:           Dde::~Dde()
//  ����������:    ���������� ������ (������� ��� ������������ �������)
//  ����:          ���
//  �����:         ���
//  ����������:    
////////////////////////////////////////////////////////////////////////////////////////////////////////////
Dde::~Dde()
{
    Disconnect();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  ���:           void Dde::Disconnect()
//  ����������:    �������� ����������� ������� � ���������� DdeML
//  ����:          ��������� �� ������� ��������� �����
//  �����:         1 - � ������ ������, 0 - � ������ ������
//  ����������:    
////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Dde::Disconnect()
{
	if (idInst)
	{
		DdeNameService(idInst, hszService, (HSZ)NULL, DNS_UNREGISTER);
		if(hszService) DdeFreeStringHandle(idInst, hszService);
		DdeUninitialize(idInst);
		idInst = 0;
	}
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  ���:           bool Dde::Connect(CallBack DdeCallback)
//  ����������:    ������������ ������ � DdeML ���������� � �������� �������������
//  ����:          ��������� �� ������� ��������� �����
//  �����:         1 - � ������ ������, 0 - � ������ ������
//  ����������:    
////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool Dde::Connect(CallBack DdeCallback)
{
	if(!RegisterClipboardFormatA((LPSTR)"XlTable")) return false;
	// ������������� DdeML ����������
	if(DdeInitialize(&idInst, DdeCallback, APPCLASS_STANDARD, 0)) return false;
	
	// ��������� ��������������� ����� ��� �������, ������� � �������� ������
	hszService = DdeCreateStringHandleA(idInst, chService.c_str(), CP_WINANSI);
	
	if(hszService == 0) return false;
	// ����������� �������
	if(!DdeNameService(idInst, hszService, NULL, DNS_REGISTER)) return false;

	return true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  ���:           HSZ Dde::GetName()
//  ����������:    ���������� ��� ������������������� �������
//  ����:          ���
//  �����:         ��� ������� ���� NULL
//  ����������:    
////////////////////////////////////////////////////////////////////////////////////////////////////////////
HSZ Dde::GetName()
{
	return hszService;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  ���:           DWORD Dde::GetId()
//  ����������:    ���������� ������������� ������������������� �������
//  ����:          ���
//  �����:         ������������� �������
//  ����������:    
////////////////////////////////////////////////////////////////////////////////////////////////////////////
DWORD Dde::GetId()
{
	return idInst;
}